generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model rooms {
  room_id      Int            @id @default(autoincrement())
  ten_phong    String         @db.VarChar(100)
  khach        Int?
  phong_ngu    Int?
  giuong       Int?
  phong_tam    Int?
  mo_ta        String?        @db.VarChar(2500)
  gia_tien     Float?
  may_giat     Boolean?
  ban_la       Boolean?
  tivi         Boolean?
  dieu_hoa     Boolean?
  wifi         Boolean?
  bep          Boolean?
  do_xe        Boolean?
  ho_boi       Boolean?
  ban_ui       Boolean?
  ma_vi_tri    Int?
  hinh_anh     String?        @db.MediumText
  book_room    book_room[]
  comments     comments[]
  placeComment placeComment[]
  locations    locations?     @relation(fields: [ma_vi_tri], references: [local_id], onDelete: NoAction, onUpdate: NoAction, map: "rooms_ibfk_1")

  @@index([ma_vi_tri], map: "ma_vi_tri")
}

model users {
  user_id   Int         @id @default(autoincrement())
  name      String      @db.VarChar(100)
  email     String      @db.VarChar(150)
  pass_word String      @db.VarChar(150)
  phone     String      @db.VarChar(150)
  birth_day DateTime?   @db.Date
  avatar    String?     @db.VarChar(250)
  gender    Boolean?
  role      String?     @default("user") @db.VarChar(10)
  book_room book_room[]
  comments  comments[]
}

model locations {
  local_id   Int     @id @default(autoincrement())
  ten_vi_tri String? @db.VarChar(100)
  tinh_thanh String? @db.VarChar(100)
  quoc_gia   String? @db.VarChar(260)
  hinh_anh   String? @db.MediumText
  rooms      rooms[]
}

model comments {
  comment_id         Int            @id @default(autoincrement())
  ma_phong           Int
  ma_nguoi_binh_luan Int
  ngay_binh_luan     DateTime      @db.DateTime(0)
  noi_dung           String        @db.VarChar(250)
  sao_binh_luan      Int
  users              users?         @relation(fields: [ma_nguoi_binh_luan], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "comments_ibfk_1")
  rooms              rooms?         @relation(fields: [ma_phong], references: [room_id], onDelete: NoAction, onUpdate: NoAction, map: "comments_ibfk_2")
  placeComment       placeComment[]

  @@index([ma_nguoi_binh_luan], map: "ma_nguoi_binh_luan")
  @@index([ma_phong], map: "ma_phong")
}

model book_room {
  book_id        Int       @id @default(autoincrement())
  ma_phong       Int?
  ngay_den       DateTime? @db.DateTime(0)
  ngay_di        DateTime? @db.DateTime(0)
  so_luong_khach Int
  ma_nguoi_dat   Int?
  users          users?    @relation(fields: [ma_nguoi_dat], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "book_room_ibfk_1")
  rooms          rooms?    @relation(fields: [ma_phong], references: [room_id], onDelete: NoAction, onUpdate: NoAction, map: "book_room_ibfk_2")

  @@index([ma_nguoi_dat], map: "ma_nguoi_dat")
  @@index([ma_phong], map: "ma_phong")
}

model placeComment {
  id         Int       @id @default(autoincrement())
  room_id    Int?
  comment_id Int?
  rooms      rooms?    @relation(fields: [room_id], references: [room_id], onDelete: NoAction, onUpdate: NoAction, map: "placeComment_ibfk_1")
  comments   comments? @relation(fields: [comment_id], references: [comment_id], onDelete: NoAction, onUpdate: NoAction, map: "placeComment_ibfk_2")

  @@index([comment_id], map: "comment_id")
  @@index([room_id], map: "room_id")
}
